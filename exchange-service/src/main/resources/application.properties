server.port=8081

spring.application.name=exchange_service
spring.mvc.pathmatch.matching-strategy = ANT_PATH_MATCHER

spring.datasource.url=jdbc:mysql://mysql-db:3306/db_banka1
spring.datasource.username=root
spring.datasource.password=root

spring.jpa.generate-ddl=true
spring.jpa.database-platform=org.hibernate.dialect.MySQL8Dialect
#spring.jpa.hibernate.ddl-auto=create-drop
spring.jpa.hibernate.ddl-auto=create
#spring.jpa.hibernate.ddl-auto=update

logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE

jwt.secret=SECRET_KEY

# TODO change endpoints to endpoints of container
flask.api.stock.timeseries = http://flask-api-service:8888/stocks/time-series
flask.api.stock.timeseries.intraday = http://flask-api-service:8888/stocks/time-series/intraday

flask.api.forex.exchange = http://flask-api-service:8888/forex/exchange
flask.api.forex.timeseries = http://flask-api-service:8888/forex/time-series
flask.api.forex.timeseries.intraday = http://flask-api-service:8888/forex/time-series/intraday

user.service.endpoint = http://user-service:8080/api

spring.rabbitmq.host=rabbitmq
spring.rabbitmq.port=5672
spring.rabbitmq.username=guest
spring.rabbitmq.password=guest
rabbitmq.exchange.name=order_exchange
rabbitmq.queue.forex.name=forex_queue
rabbitmq.queue.stock.name=stock_queue
rabbitmq.routing.forex.key=forex_routing_key
rabbitmq.routing.stock.key=stock_routing_key

# Redis Config
spring.cache.type=redis
spring.redis.host=redis
spring.redis.port=6379
spring.cache.redis.time-to-live=900000